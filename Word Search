class Solution {
    public boolean exist(char[][] board, String word) {
        for(int i = 0; i<board.length; i++){
            for(int j = 0; j<board[i].length; j++){
                if(board[i][j] == word.charAt(0) && traverse(board, "", word, i, j)){
                    return true;
                }
            }
        }
        return false;
    }
    public boolean traverse(char[][] board, String word, String real, int i, int j){
        if(word.equals(real)){
            return true;
        }
        if(word.length() != 0 && real.indexOf(word) < 0){
            return false;
        }
        if(i<0 || i>=board.length || j<0 || j>=board[0].length){
            return false;
        }
        if(board[i][j] == '0') return false;
        char temp = board[i][j];
        word+=temp+"";
        board[i][j] = '0';
        if(traverse(board, word, real, i, j-1)) return true;
        if(traverse(board, word, real, i, j+1)) return true;
        if(traverse(board, word, real, i-1, j)) return true;
        if(traverse(board, word, real, i+1, j)) return true;
        word = word.substring(0, word.length()-1);
        board[i][j] = temp;
        return false;
    }
}
