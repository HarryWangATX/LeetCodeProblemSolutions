/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res = new LinkedList<>();
        if(root == null) return res;
        
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        boolean t = true;
        while(!q.isEmpty()){
            int s = q.size();
            LinkedList<Integer> temp = new LinkedList<>();
            for(int i = 0; i<s; i++){
                TreeNode cur = q.poll();
                if(t){
                    temp.add(cur.val);
                }
                else{
                    temp.addFirst(cur.val);
                }
                
                if(cur.left != null){
                    q.add(cur.left);
                }
                if(cur.right != null){
                    q.add(cur.right);
                }
                
            }
            t = !t;
            res.add(temp);
        }
        return res;
    }
}
