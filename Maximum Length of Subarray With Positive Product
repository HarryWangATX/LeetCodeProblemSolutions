class Solution {
    public int getMaxLen(int[] nums) {
        int max = -1;
        int count = 0;
        List<Integer> zero = new ArrayList<>();
        for(int i = 0; i<nums.length; i++){
            if(nums[i] == 0){
                zero.add(i);
            }
        }
        
        
        List<int[]> arrs = new ArrayList<>();
        if(zero.size() == 0){
            arrs.add(nums.clone());
        }
        else{
            int start = 0;
            for(int i = 0; i<zero.size(); i++){
                int[] temp = new int[zero.get(i)-start];
                int ix = 0;
                for(int j = start; j<zero.get(i); j++){
                    temp[ix++] = nums[j];
                }
                start = zero.get(i) + 1;
                if(temp.length > 0){
                    arrs.add(temp.clone());
                }

            }
            int ix = 0;
            int[] temp = new int[nums.length - start];
            for(int i = start; i<nums.length; i++){
                //System.out.println(i + " " + nums[i]);
                temp[ix++] = nums[i];
                //System.out.println(Arrays.toString(temp));
            }
            arrs.add(temp.clone());
        }
        
        
        for(int[] a : arrs){
            //System.out.println(Arrays.toString(a));
            int countneg = 0;
            count = 0;
            for(int i = 0; i<a.length; i++){
                if(a[i] < 0){
                    countneg++;
                }
            }
            if(countneg % 2 == 0){
                count = a.length; 
            }
            else{
                int cur = 0;
                for(int i = 0; i<a.length; i++){
                    
                    if(a[i] < 0){
                        cur++;
                    }
                    if(cur == countneg){
                        break;
                    }
                    count++;
                }
                cur = 0;
                int count2 = 0;
                for(int i = a.length-1; i>=0; i--){
                    
                    if(a[i] < 0){
                        cur++;
                    }
                    if(cur == countneg){
                        break;
                    }
                    count2++;
                }
                count = Math.max(count, count2);
            }
            max = Math.max(count, max);
        }
        
        return max;
    }
}
