class Solution {
    final int MOD = 1000000007;
    public int rangeSum(int[] nums, int n, int left, int right) {
        left--;
        int[] prefixSum = new int[nums.length];
        int[] range = new int[n * (n + 1) / 2];
        long res = 0;
        int prev = 0;
        int ix = 0;
        for(int i = 0; i<prefixSum.length; i++){
            prefixSum[i] = prev + nums[i];
            prev = prefixSum[i];
            range[ix++] = prev;
        }
        
        for(int i = 0; i<prefixSum.length-1; i++){
            for(int j = i+1; j<prefixSum.length; j++){
                int sum = prefixSum[j] - prefixSum[i];
                range[ix++] = sum;
            }
        }
        Arrays.sort(range);
        for(int i = left; i<right; i++){
            res += range[i];
        }
        //System.out.println(Arrays.toString(prefixSum));
        //System.out.println(Arrays.toString(range));
        return (int)(res%MOD);
    }
}
