class Solution {
    public int findLeastNumOfUniqueInts(int[] arr, int k) {
        Arrays.sort(arr);
        Map<Integer, Integer> map = new HashMap<>();
        Set<Integer> link1 = new HashSet<>();
        for(int i = 0; i<arr.length; i++){
            map.put(arr[i], map.getOrDefault(arr[i], 0)+1);
        }
        int[][] arr1 = new int[map.size()][2];
        Iterator hmIterator = map.entrySet().iterator(); 
        int count = 0;
        while (hmIterator.hasNext()) { 
            Map.Entry mapElement = (Map.Entry)hmIterator.next(); 
            arr1[count][0] = (int)mapElement.getKey();
            arr1[count++][1] = (int)mapElement.getValue();
        } 
        Arrays.sort(arr1, new Comparator<int[]>(){
            public int compare(int[] o1, int[] o2){
                return o1[1] - o2[1];
            }
        });
        //System.out.println(Arrays.deepToString(arr1));
        for(int i = 0; i<arr1.length; i++){
            if(k==0){
                break;
            }
            int sub = Math.min(arr1[i][1], k);
            k-=sub;
            map.put(arr1[i][0], map.get(arr1[i][0])-sub);
            //System.out.println(arr1[i][0] + " " + map.get(arr1[i][0]));
            if(map.get(arr1[i][0])==0){
                map.remove(arr1[i][0]);
            }
            
        }
            
        return map.size();
    }
}
