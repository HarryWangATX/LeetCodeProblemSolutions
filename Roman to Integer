class Solution {
    /*
    Roman numeral (n)	         Decimal value (v)
    I	                                  1
    IV                                    4
    V                                     5
    IX	                                  9
    X	                                  10
    XL	                                  40
    L	                                  50
    XC	                                  90
    C	                                  100
    CD	                                  400
    D	                                  500
    CM	                                  900
    M	                                  1000
    */
    Map<String, Integer> roman = new HashMap<>();
    public int romanToInt(String s) {
        fill();
        int i = 0;
        int add = 1;
        int value = 0;        
        while(i < s.length()){
            int temp = roman.get(s.charAt(i)+"");
            if(i + 1 < s.length() && roman.containsKey(s.substring(i, i+2))){
                if(roman.get(s.substring(i, i+2)) > temp){
                    temp = roman.get(s.substring(i, i+2));
                    add = 2;
                }
            }
            i+=add;
            value += temp;
            add = 1;
        }
        return value;
    }
    public void fill(){
        roman.put("I", 1);
        roman.put("IV", 4);
        roman.put("V", 5);
        roman.put("IX", 9);
        roman.put("X", 10);
        roman.put("XL", 40);
        roman.put("L", 50);
        roman.put("XC", 90);
        roman.put("C", 100);
        roman.put("CD", 400);
        roman.put("D", 500);
        roman.put("CM", 900);
        roman.put("M", 1000);
    }
}
