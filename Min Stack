class MinStack {

    /** initialize your data structure here. */
    ArrayList<int[]> list;
    int min = Integer.MAX_VALUE;
    public MinStack() {
        list = new ArrayList<>();
    }
    
    public void push(int x) {
        list.add(new int[] {x, Math.min(min, x)});
        min = Math.min(min,x);
        /*
        for(int i = 0; i<list.size(); i++){
            System.out.print(Arrays.toString(list.get(i)) + " ");
        }
        System.out.println();
        */
    }
    
    public void pop() {
        if(list.size() == 0){
            min = Integer.MAX_VALUE;
            return ;
        }
        else if(list.size() == 1){
            list.remove(list.size()-1);
            min = Integer.MAX_VALUE;
        }
        else{
            list.remove(list.size()-1);
            min = list.get(list.size()-1)[1];
        }/*
        for(int i = 0; i<list.size(); i++){
            System.out.print(Arrays.toString(list.get(i)) + " ");
        }
        System.out.println();
        */
    }
    
    public int top() {
        /*
        for(int i = 0; i<list.size(); i++){
            System.out.print(Arrays.toString(list.get(i)) + " ");
        }
        System.out.println();
        */
        return list.get(list.size()-1)[0];
    }
    
    public int getMin() {
        return list.get(list.size()-1)[1]; 
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(x);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
