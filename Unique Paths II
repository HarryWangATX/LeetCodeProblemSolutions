class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        if(obstacleGrid[0][0]==1){
            return 0;
        }
        else if(obstacleGrid[obstacleGrid.length-1][obstacleGrid[0].length-1] == 1){
            return 0;
        }
        int[][] dp = new int[obstacleGrid.length][obstacleGrid[0].length];
        dp[0][0] = 1;
        for(int i = 0; i<dp.length; i++){
            for(int j = 0; j<dp[i].length; j++){
                if(obstacleGrid[i][j] == 1){
                    continue;
                }
                if(i>0 && j>0){
                    dp[i][j] += dp[i-1][j] + dp[i][j-1];
                }
                else if(j>0){
                    dp[i][j] += dp[i][j-1];
                }
                else if(i>0){
                    dp[i][j] += dp[i-1][j];
                }
            }
        }
        /*
        for(int[] row : dp){
            for(int col : row){
                System.out.print("\t" + col);
            }
            System.out.println();
        }
        */
        return dp[dp.length-1][dp[0].length-1];
    }
}
