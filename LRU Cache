class LRUCache {
    private int cap;
    private int count = 0;
    private Map<Integer, Integer> map = new LinkedHashMap<>();
    
    public LRUCache(int capacity) {
        cap = capacity;
    }
    
    public int get(int key) {
        if(map.containsKey(key)){
            int val = map.remove(key);
            map.put(key, val);
            return val;
        }
        return -1;
        
    }
    
    public void put(int key, int value) {
        
        if(map.containsKey(key)){
            map.remove(key);
        }
        if(map.size() == cap){
            int lru = map.entrySet().iterator().next().getKey();
            map.remove(lru);
        }
        map.put(key, value);
    }
}

/**
 * Your LRUCache object will be instantiated and called as such:
 * LRUCache obj = new LRUCache(capacity);
 * int param_1 = obj.get(key);
 * obj.put(key,value);
 */
