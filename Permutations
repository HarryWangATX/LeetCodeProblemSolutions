class Solution {
    List<List<Integer>> res = new ArrayList<>();
    public List<List<Integer>> permute(int[] nums) {
        dfs(nums, new ArrayList<>(), new HashSet<>());
        return res;
    }
    public void dfs(int[] nums, List<Integer> store, Set<Integer> used){
        if(store.size() == nums.length){
            res.add(new ArrayList<Integer>(store));
            return ;
        }
        for(int i = 0; i<nums.length; i++){
            if(used.contains(nums[i])) continue;
            used.add(nums[i]);
            store.add(nums[i]);
            dfs(nums, store, used);
            store.remove(store.size()-1);
            used.remove(nums[i]);
        }
    }
}
